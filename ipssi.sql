-- MySQL Script generated by MySQL Workbench
-- Fri Jul  3 16:39:45 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `id` INT NOT NULL,
  `fistname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `email`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`profile` (
  `id` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `permissions` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`permission` (
  `id` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cra` (
  `id` INT NOT NULL,
  `content` VARCHAR(45) NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_cra_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_cra_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`news`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`news` (
  `id` INT NOT NULL,
  `content` VARCHAR(45) NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_news_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_news_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cv`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cv` (
  `id` INT NOT NULL,
  `content` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`expense_report`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`expense_report` (
  `id` INT NOT NULL,
  `description` VARCHAR(45) NULL,
  `value` FLOAT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_expense_report_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_expense_report_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`holiday`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`holiday` (
  `id` INT NOT NULL,
  `description` VARCHAR(45) NULL,
  `beginning` DATETIME NOT NULL,
  `end` DATETIME NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_holiday_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_holiday_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`offer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`offer` (
  `id` INT NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `profile_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_offer_profile1_idx` (`profile_id` ASC),
  CONSTRAINT `fk_offer_profile1`
    FOREIGN KEY (`profile_id`)
    REFERENCES `mydb`.`profile` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`application`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`application` (
  `id` INT NOT NULL,
  `cv_id` INT NOT NULL,
  `offer_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_application_cv1_idx` (`cv_id` ASC),
  INDEX `fk_application_offer1_idx` (`offer_id` ASC),
  CONSTRAINT `fk_application_cv1`
    FOREIGN KEY (`cv_id`)
    REFERENCES `mydb`.`cv` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_offer1`
    FOREIGN KEY (`offer_id`)
    REFERENCES `mydb`.`offer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`media` (
  `id` INT NOT NULL,
  `path` VARCHAR(45) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `ext` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_type_has_permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_type_has_permission` (
  `user_type_id` INT NOT NULL,
  `permission_id` INT NOT NULL,
  PRIMARY KEY (`user_type_id`, `permission_id`),
  INDEX `fk_user_type_has_permission_permission1_idx` (`permission_id` ASC),
  INDEX `fk_user_type_has_permission_user_type1_idx` (`user_type_id` ASC),
  CONSTRAINT `fk_user_type_has_permission_user_type1`
    FOREIGN KEY (`user_type_id`)
    REFERENCES `mydb`.`profile` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_type_has_permission_permission1`
    FOREIGN KEY (`permission_id`)
    REFERENCES `mydb`.`permission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_profile` (
  `user_id` INT NOT NULL,
  `user_type_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `user_type_id`),
  INDEX `fk_user_has_user_type_user_type1_idx` (`user_type_id` ASC),
  INDEX `fk_user_has_user_type_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_user_type_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_user_type_user_type1`
    FOREIGN KEY (`user_type_id`)
    REFERENCES `mydb`.`profile` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`message` (
  `id` INT NOT NULL,
  `titre` VARCHAR(45) NOT NULL,
  `content` VARCHAR(45) NOT NULL,
  `sender` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_message_user1_idx` (`sender` ASC),
  CONSTRAINT `fk_message_user1`
    FOREIGN KEY (`sender`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`message_has_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`message_has_user` (
  `message_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`message_id`, `user_id`),
  INDEX `fk_message_has_user_user1_idx` (`user_id` ASC),
  INDEX `fk_message_has_user_message1_idx` (`message_id` ASC),
  CONSTRAINT `fk_message_has_user_message1`
    FOREIGN KEY (`message_id`)
    REFERENCES `mydb`.`message` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_message_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
